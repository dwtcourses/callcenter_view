# This is a basic workflow to help you get started with Actions

name: build and pack

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
#    tags: 
#      - 'v*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    # - uses: egordm/gha-yarn-node-cache@v1
        
      - name: Setup php and conposer
        uses: php-actions/composer@v2 
        
      - name: Setup node for yarn 
        uses: actions/setup-node@v1

      
      - run: npm install -g yarn
        
      - name: setup yarn dependencies
        run: |
         yarn install
           
      - name: webpack front
        run: yarn encore prod 
        
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: callcenter_view
#          path: |
#            public
#            config
#            src
#            templates
#            vendor   
            
      - name: Build project 
        run: |
          ls -l
          zip  callcenter_view public config src template vendor .env        
         
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./callcenter_view.zip
          asset_name: callcenter_view.zip
          asset_content_type: application/zip            
            
